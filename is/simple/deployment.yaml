#creating kubernetes configmaps identity-server-conf from ../confs
apiVersion: v1
data:
  carbon.xml: |
    <?xml version="1.0" encoding="ISO-8859-1"?>

    <Server xmlns="http://wso2.org/projects/carbon/carbon.xml">

        <Name>WSO2 Identity Server</Name>
        <ServerKey>IS</ServerKey>
        <Version>5.7.0</Version>
        <HostName>wso2is</HostName>
        <MgtHostName>wso2is</MgtHostName>
        <ServerURL>local:/${carbon.context}/services/</ServerURL>
        <ServerRoles>
            <Role>IdentityServer</Role>
        </ServerRoles>
        <Package>org.wso2.carbon</Package>
        <WebContextRoot>/</WebContextRoot>
        <ItemsPerPage>15</ItemsPerPage>
        <Ports>
            <Offset>0</Offset>
            <JMX>
                <RMIRegistryPort>9999</RMIRegistryPort>
                <RMIServerPort>11111</RMIServerPort>
            </JMX>
            <EmbeddedLDAP>
                <LDAPServerPort>10389</LDAPServerPort>
                <KDCServerPort>8000</KDCServerPort>
            </EmbeddedLDAP>
      <ThriftEntitlementReceivePort>10500</ThriftEntitlementReceivePort>
        </Ports>
        <JNDI>
            <DefaultInitialContextFactory>org.wso2.carbon.tomcat.jndi.CarbonJavaURLContextFactory</DefaultInitialContextFactory>
            <Restrictions>
                <AllTenants>
                    <UrlContexts>
                        <UrlContext>
                            <Scheme>java</Scheme>
                        </UrlContext>
                    </UrlContexts>
                </AllTenants>
            </Restrictions>
        </JNDI>
        <IsCloudDeployment>false</IsCloudDeployment>
        <EnableMetering>false</EnableMetering>
        <MaxThreadExecutionTime>600</MaxThreadExecutionTime>
        <GhostDeployment>
            <Enabled>false</Enabled>
        </GhostDeployment>
        <Tenant>
            <LoadingPolicy>
                <LazyLoading>
                    <IdleTime>30</IdleTime>
                </LazyLoading>
            </LoadingPolicy>
        </Tenant>
        <Cache>
            <DefaultCacheTimeout>15</DefaultCacheTimeout>
            <ForceLocalCache>false</ForceLocalCache>
        </Cache>
        <Axis2Config>
            <RepositoryLocation>${carbon.home}/repository/deployment/server/</RepositoryLocation>
            <DeploymentUpdateInterval>15</DeploymentUpdateInterval>
            <ConfigurationFile>${carbon.home}/repository/conf/axis2/axis2.xml</ConfigurationFile>
            <ServiceGroupContextIdleTime>30000</ServiceGroupContextIdleTime>
            <ClientRepositoryLocation>${carbon.home}/repository/deployment/client/</ClientRepositoryLocation>
            <clientAxis2XmlLocation>${carbon.home}/repository/conf/axis2/axis2_client.xml</clientAxis2XmlLocation>
            <HideAdminServiceWSDLs>true</HideAdminServiceWSDLs>

        </Axis2Config>
        <ServiceUserRoles>
            <Role>
                <Name>admin</Name>
                <Description>Default Administrator Role</Description>
            </Role>
            <Role>
                <Name>user</Name>
                <Description>Default User Role</Description>
            </Role>
        </ServiceUserRoles>
        <CryptoService>

            <Enabled>true</Enabled>
            <InternalCryptoProviderClassName>org.wso2.carbon.crypto.provider.KeyStoreBasedInternalCryptoProvider</InternalCryptoProviderClassName>

            <ExternalCryptoProviderClassName>org.wso2.carbon.core.encryption.KeyStoreBasedExternalCryptoProvider</ExternalCryptoProviderClassName>

            <KeyResolvers>
                <KeyResolver className="org.wso2.carbon.crypto.defaultProvider.resolver.ContextIndependentKeyResolver" priority="-1"/>
            </KeyResolvers>

        </CryptoService>

        <Security>
            <KeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.jks</Location>
                <Type>JKS</Type>
                <Password>wso2carbon</Password>
                <KeyAlias>wso2carbon</KeyAlias>
                <KeyPassword>wso2carbon</KeyPassword>
            </KeyStore>
            <InternalKeyStore>
                <Location>${carbon.home}/repository/resources/security/wso2carbon.jks</Location>
                <Type>JKS</Type>
                <Password>wso2carbon</Password>
                <KeyAlias>wso2carbon</KeyAlias>
                <KeyPassword>wso2carbon</KeyPassword>
            </InternalKeyStore>
            <TrustStore>
                <Location>${carbon.home}/repository/resources/security/client-truststore.jks</Location>
                <Type>JKS</Type>
                <Password>wso2carbon</Password>
            </TrustStore>
            <NetworkAuthenticatorConfig>
            </NetworkAuthenticatorConfig>
            <TomcatRealm>UserManager</TomcatRealm>

      <DisableTokenStore>false</DisableTokenStore>

     <STSCallBackHandlerName>org.wso2.carbon.identity.provider.AttributeCallbackHandler</STSCallBackHandlerName>

      <TokenStoreClassName>org.wso2.carbon.identity.sts.store.DBTokenStore</TokenStoreClassName>

            <XSSPreventionConfig>
                <Enabled>true</Enabled>
                <Rule>allow</Rule>
                <Patterns>

                </Patterns>
            </XSSPreventionConfig>
        </Security>
    <HideMenuItemIds>
    <HideMenuItemId>claim_mgt_menu</HideMenuItemId>
    <HideMenuItemId>identity_mgt_emailtemplate_menu</HideMenuItemId>
    <HideMenuItemId>identity_security_questions_menu</HideMenuItemId>
    </HideMenuItemIds>

        <WorkDirectory>${carbon.home}/tmp/work</WorkDirectory>

        <HouseKeeping>

            <AutoStart>true</AutoStart>

            <Interval>10</Interval>

            <MaxTempFileLifetime>30</MaxTempFileLifetime>
        </HouseKeeping>

        <FileUploadConfig>

            <TotalFileSizeLimit>100</TotalFileSizeLimit>

            <Mapping>
                <Actions>
                    <Action>keystore</Action>
                    <Action>certificate</Action>
                    <Action>*</Action>
                </Actions>
                <Class>org.wso2.carbon.ui.transports.fileupload.AnyFileUploadExecutor</Class>
            </Mapping>

            <Mapping>
                <Actions>
                    <Action>jarZip</Action>
                </Actions>
                <Class>org.wso2.carbon.ui.transports.fileupload.JarZipUploadExecutor</Class>
            </Mapping>
            <Mapping>
                <Actions>
                    <Action>dbs</Action>
                </Actions>
                <Class>org.wso2.carbon.ui.transports.fileupload.DBSFileUploadExecutor</Class>
            </Mapping>
            <Mapping>
                <Actions>
                    <Action>tools</Action>
                </Actions>
                <Class>org.wso2.carbon.ui.transports.fileupload.ToolsFileUploadExecutor</Class>
            </Mapping>
            <Mapping>
                <Actions>
                    <Action>toolsAny</Action>
                </Actions>
                <Class>org.wso2.carbon.ui.transports.fileupload.ToolsAnyFileUploadExecutor</Class>
            </Mapping>
        </FileUploadConfig>


        <HttpGetRequestProcessors>
            <Processor>
                <Item>info</Item>
                <Class>org.wso2.carbon.core.transports.util.InfoProcessor</Class>
            </Processor>
            <Processor>
                <Item>wsdl</Item>
                <Class>org.wso2.carbon.core.transports.util.Wsdl11Processor</Class>
            </Processor>
            <Processor>
                <Item>wsdl2</Item>
                <Class>org.wso2.carbon.core.transports.util.Wsdl20Processor</Class>
            </Processor>
            <Processor>
                <Item>xsd</Item>
                <Class>org.wso2.carbon.core.transports.util.XsdProcessor</Class>
            </Processor>
        </HttpGetRequestProcessors>

        <DeploymentSynchronizer>
            <Enabled>false</Enabled>
            <AutoCommit>false</AutoCommit>
            <AutoCheckout>true</AutoCheckout>
            <RepositoryType>svn</RepositoryType>
            <SvnUrl>http://svnrepo.example.com/repos/</SvnUrl>
            <SvnUser>username</SvnUser>
            <SvnPassword>password</SvnPassword>
            <SvnUrlAppendTenantId>true</SvnUrlAppendTenantId>
        </DeploymentSynchronizer>

        <ServerInitializers>

        </ServerInitializers>

        <RequireCarbonServlet>${require.carbon.servlet}</RequireCarbonServlet>

        <StatisticsReporterDisabled>true</StatisticsReporterDisabled>

        <FeatureRepository>
          <RepositoryName>default repository</RepositoryName>
          <RepositoryURL>http://product-dist.wso2.com/p2/carbon/releases/wilkes/</RepositoryURL>
        </FeatureRepository>

       <APIManagement>

      <Enabled>true</Enabled>

      <LoadAPIContextsInServerStartup>true</LoadAPIContextsInServerStartup>
       </APIManagement>
    </Server>
kind: ConfigMap
metadata:
  name: identity-server-conf
  namespace: wso2

---
# Deploying kubernetes services

apiVersion: v1
kind: Service
metadata:
  name: wso2is-service
  namespace: wso2
spec:
  selector:
    deployment: wso2is
  ports:
    - name: servlet-http
      port: 9763
      targetPort: 9763
      protocol: TCP
    - name: servlet-https
      port: 9443
      targetPort: 9443
      protocol: TCP

---

# Deploying wso2 identity server

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2is-deployment
  namespace: wso2
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: wso2is
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: wso2is
    spec:
      containers:
        - name: wso2is
          image: docker.wso2.com/wso2is:5.7.0
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 180
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 180
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          imagePullPolicy: Always
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
          volumeMounts:
            - name: identity-server-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
      serviceAccountName: "wso2svc-account"
      imagePullSecrets:
        - name: wso2creds
      volumes:
        - name: identity-server-conf
          configMap:
            name: identity-server-conf

---
# create Kubernetes Ingress resources
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wso2is-ingress
  namespace: wso2
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
    - hosts:
        - wso2is
  rules:
    - host: wso2is
      http:
        paths:
          - path: /
            backend:
              serviceName: wso2is-service
              servicePort: 9443
