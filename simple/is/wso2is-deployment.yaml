
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2is-is-deployment
  namespace: "$ns.k8s&wso2.is"
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2is-is
      pod: wso2is
  template:
    metadata:
      labels:
        deployment: wso2is-is
        pod: wso2is
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "wso2is"
      containers:
        - name: wso2is-is
          image: "$image.pull.@.wso2"/wso2is:5.7.0
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: 60
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          imagePullPolicy: Always
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
          volumeMounts:
            - name: identity-server-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            - name: identity-server-conf-datasources
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/datasources
      initContainers:
        - name: init-is
          image: busybox
          command: ['sh', '-c', 'echo -e "checking for the availability of MySQL"; while ! nc -z wso2is-rdbms-service 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL started";']
      serviceAccountName: "wso2svc-account"
      imagePullSecrets:
        - name: wso2creds
      volumes:
        - name: identity-server-conf
          configMap:
            name: identity-server-conf
        - name: identity-server-conf-datasources
          configMap:
            name: identity-server-conf-datasources
---
